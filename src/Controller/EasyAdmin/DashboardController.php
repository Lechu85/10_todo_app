<?php

namespace App\Controller\EasyAdmin;

use App\Entity\Answer;
use App\Entity\Blog;
use App\Entity\BlogCategory;
use App\Entity\Question;
use App\Entity\Topic;
use App\Entity\User;
use EasyCorp\Bundle\EasyAdminBundle\Config\Action;
use EasyCorp\Bundle\EasyAdminBundle\Config\Actions;
use EasyCorp\Bundle\EasyAdminBundle\Config\Assets;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Config\Dashboard;
use EasyCorp\Bundle\EasyAdminBundle\Config\MenuItem;
use EasyCorp\Bundle\EasyAdminBundle\Config\UserMenu;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractDashboardController;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\IsGranted;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\Security\Core\User\UserInterface;
use function PHPUnit\Framework\throwException;

class DashboardController extends AbstractDashboardController
{
	#[IsGranted('ROLE_ADMIN')]
    #[Route('/admin', name: 'admin')]
    public function index(): Response
    {
        //return parent::index();
	    return $this->render('easy_admin/index.html.twig');

        // Option 1. You can make your dashboard redirect to some common page of your backend
        //
        // $adminUrlGenerator = $this->container->get(AdminUrlGenerator::class);
        // return $this->redirect($adminUrlGenerator->setController(OneOfYourCrudController::class)->generateUrl());

        // Option 2. You can make your dashboard redirect to different pages depending on the user
        //
        // if ('jane' === $this->getUser()->getUsername()) {
        //     return $this->redirect('...');
        // }

        // Option 3. You can render some custom template to display a proper dashboard with widgets, etc.
        // (tip: it's easier if your template extends from @EasyAdmin/page/content.html.twig)
        //
        // return $this->render('some/path/my-dashboard.html.twig');
    }

    public function configureDashboard(): Dashboard
    {
        return Dashboard::new()
	       // ->setTitle('<img src="assets/images/favicon/app_logo.png">  <span class="text-small">ToDo App :)</span>')
	        ->setTitle('ToDo App Admin :) ')
	        ->setFaviconPath('assets/images/favicon/favicon.ico')
	        ;
    }

	public function configureUserMenu(UserInterface $user): UserMenu
	{
		if (!$user instanceof User) {
			throw new \Exception('wrong user');
			//to się nie wydarzy, ale dzieki temu widzi klase getAvatarUrl poniżej
		}

		return parent::configureUserMenu($user)
			->setAvatarUrl($user->getAvatarUrl())//nie wyswioetla avatarta, tyzeba załądować
			->setMenuItems([
				MenuItem::linkToUrl('Profile', 'fa fa-user', $this->generateUrl('app_profile'))
			])
			;

	}


	public function configureMenuItems(): iterable
    {

		yield MenuItem::linkToDashboard('Dashboard', 'fa fa-home');
		yield MenuItem::linkToCrud('Questions', 'fa fa-question-circle', Question::class);
	    yield MenuItem::linkToCrud('Answers', 'fa fa-comments', Answer::class);
	    yield MenuItem::linkToCrud('Topics', 'fa fa-folder', Topic::class);
	    yield MenuItem::linkToCrud('Users', 'fa fa-user', User::class);
		yield MenuItem::linkToRoute('Homepage', 'fa fa-home', 'home_index');
	    yield MenuItem::linkToUrl('Homepage', 'fa fa-home', $this->generateUrl('home_index'));
    }

	public function configureActions(): Actions
	{
		return parent::configureActions()
			->add(Crud::PAGE_DETAIL, Action::DETAIL);
			//For the Crud::PAGE_INDEX page, please add the Action::DETAIL.
	}

	public function configureAssets(): Assets
	{
		return parent::configureAssets()
			->addWebpackEncoreEntry('admin'); // TODO: Change the autogenerated stub
	}


}
